// Generated by CoffeeScript 1.9.3
var isUrlValid;

$(document).ready(function() {
  $('#type').change(function() {
    var type;
    type = $(this).val();
    if (type === 'GET') {
      return $('#dataWrapper').addClass('hide');
    } else if (type === 'POST') {
      return $('#dataWrapper').removeClass('hide');
    }
  });
  $('#newURLButton').click(function() {
    var data, jsonError, type, url;
    event.preventDefault();
    $('.urlAlert').addClass('hide');
    url = $('#url').val();
    type = $('#type').val();
    if (!isUrlValid(url)) {
      $('#newURLErrorURL').removeClass('hide');
      return;
    }
    data = type === 'GET' ? '' : $('#data').val();
    if (data) {
      try {
        $.parseJSON(data);
      } catch (_error) {
        jsonError = _error;
        $('#newURLErrorData').removeClass('hide');
        return;
      }
    }
    return $.post('/url', $('#newURLForm').serialize()).done(function(newUrlId) {
      var actionCell, buttonGrouper, dataCell, deleteButton, row, typeCell, updateButton, urlCell;
      if ($('#rowToDelete').length) {
        $('#rowToDelete').remove();
        $('#updateURLSuccess').removeClass('hide');
      } else {
        $('#newURLSuccess').removeClass('hide');
      }
      urlCell = document.createElement('td');
      $(urlCell).addClass('tableUrl');
      $(urlCell).append(url);
      typeCell = document.createElement('td');
      $(typeCell).addClass('tableType');
      $(typeCell).append(type);
      dataCell = document.createElement('td');
      $(dataCell).addClass('tableData');
      $(dataCell).append(data);
      updateButton = document.createElement('button');
      $(updateButton).attr({
        'type': 'button',
        'data-url-id': newUrlId,
        'class': 'btn btn-default updateUrl'
      });
      $(updateButton).html('Update');
      deleteButton = document.createElement('button');
      $(deleteButton).attr({
        'type': 'button',
        'data-url-id': newUrlId,
        'class': 'btn btn-default deleteUrl'
      });
      $(deleteButton).html('Delete');
      buttonGrouper = document.createElement('div');
      $(buttonGrouper).attr({
        'class': 'btn-group',
        'role': 'group'
      });
      $(buttonGrouper).append(updateButton, deleteButton);
      actionCell = document.createElement('td');
      $(actionCell).append(buttonGrouper);
      row = document.createElement('tr');
      $(row).append(urlCell, typeCell, dataCell, actionCell);
      return $('#urlTableBody').prepend(row);
    }).fail(function(requestError) {
      return $("#" + requestError['responseText']).removeClass('hide');
    });
  });
  $('body').delegate('.updateUrl', 'click', function() {
    var _id, data, rowDom, type, url;
    $('.urlAlert').addClass('hide');
    rowDom = $(this).closest('tr');
    rowDom.attr('id', 'rowToDelete');
    url = $(rowDom.find('.tableUrl')[0]).text();
    type = $(rowDom.find('.tableType')[0]).text();
    data = $(rowDom.find('.tableData')[0]).text();
    _id = $(this).data('url-id');
    $('#url').val(url);
    $('#type').val(type);
    $('#data').val(data);
    $('#_id').val(_id);
    if (type === 'GET') {
      $('#dataWrapper').addClass('hide');
    } else if (type === 'POST') {
      $('#dataWrapper').removeClass('hide');
    }
    return window.scrollTo(0, $('#newURLForm').offset());
  });
  return $('body').delegate('.deleteUrl', 'click', function() {
    var _id, rowDom;
    $('.urlAlert').addClass('hide');
    _id = $(this).data('url-id');
    rowDom = $(this).closest('tr');
    return $.ajax({
      url: '/url',
      type: 'DELETE',
      data: {
        _id: _id
      }
    }).done(function() {
      return rowDom.remove();
    }).fail(function() {
      return $('#deleteUrlError').removeClass('hide');
    });
  });
});

isUrlValid = function(url) {
  return /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(url);
};
